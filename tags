!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/tsukasakop/Documents/42cursus-push_swap/libft/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/43ca05548/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
BN_STORE_MAX	include/ft_blocked_node.h	/^# define BN_STORE_MAX /;"	d
BUFFER_SIZE	include/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
FT_ASSERT_H	include/ft_assert.h	/^# define FT_ASSERT_H$/;"	d
FT_BLOCKED_NODE_H	include/ft_blocked_node.h	/^# define FT_BLOCKED_NODE_H$/;"	d
FT_CTYPE_H	include/ft_ctype.h	/^# define FT_CTYPE_H$/;"	d
FT_GLOBAL_H	include/ft_global.h	/^# define FT_GLOBAL_H$/;"	d
FT_HTBL_H	include/ft_htbl.h	/^# define FT_HTBL_H$/;"	d
FT_LST_H	include/ft_lst.h	/^# define FT_LST_H$/;"	d
FT_MAX_F_ATEXIT	include/ft_stdlib.h	/^#  define FT_MAX_F_ATEXIT /;"	d
FT_MEMORY_H	include/ft_memory.h	/^# define FT_MEMORY_H$/;"	d
FT_PRINTF_H	ft_printf.h	/^# define FT_PRINTF_H$/;"	d
FT_STDIO_H	include/ft_stdio.h	/^# define FT_STDIO_H$/;"	d
FT_STDLIB_H	include/ft_stdlib.h	/^# define FT_STDLIB_H$/;"	d
FT_STRINGS_H	include/ft_strings.h	/^# define FT_STRINGS_H$/;"	d
FT_STRING_H	include/ft_string.h	/^# define FT_STRING_H$/;"	d
GET_NEXT_LINE_H	include/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
HTSIZE	include/ft_htbl.h	/^# define HTSIZE /;"	d
LIBFT_H	include/libft.h	/^# define LIBFT_H$/;"	d
PRINTF	test/ft_printf.c	/^#define PRINTF(/;"	d	file:
_FT_STDIO_H	include/_ft_stdio.h	/^# define _FT_STDIO_H$/;"	d
__anon45fa6c69010a	include/_ft_stdio.h	/^	{$/;"	u	struct:s_format
__anon45fa6c690208	include/_ft_stdio.h	/^	{$/;"	s	struct:s_format
_fd	include/ft_stdio.h	/^	int			_fd;$/;"	m	struct:s_file	typeref:typename:int
_get_func_atexit	src/ft_exit.c	/^static void	*_get_func_atexit(void)$/;"	f	typeref:typename:void *	file:
add_cnt	src/ft_vfprintf0.c	/^size_t	add_cnt(size_t rhs)$/;"	f	typeref:typename:size_t
append_word	src/ft_split.c	/^static bool	append_word(char const *begin, char const *end, void *p)$/;"	f	typeref:typename:bool	file:
can_add_to_cnt	src/ft_vfprintf0.c	/^size_t	can_add_to_cnt(size_t c)$/;"	f	typeref:typename:size_t
ch_test	test/ft_global.c	/^void	ch_test(void)$/;"	f	typeref:typename:void
cnt	include/ft_blocked_node.h	/^	size_t						cnt;$/;"	m	struct:s_blocked_node	typeref:typename:size_t
cnt_word	src/ft_split.c	/^static bool	cnt_word(char const *begin, char const *end, void *p)$/;"	f	typeref:typename:bool	file:
content	include/ft_lst.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
content	include/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
del_cnt	src/ft_vfprintf0.c	/^void	del_cnt(void)$/;"	f	typeref:typename:void
digit	src/ft_itoa.c	/^static size_t	digit(int n)$/;"	f	typeref:typename:size_t	file:
echo	test/ft_atexit.c	/^void echo()$/;"	f	typeref:typename:void
extract_line	src/get_next_line.c	/^static char	*extract_line(char **p_store)$/;"	f	typeref:typename:char *	file:
fcmp	test/vfprintf.c	/^char	fcmp(const char *f1, const char *f2)$/;"	f	typeref:typename:char
field	include/_ft_stdio.h	/^	size_t				field;$/;"	m	struct:s_format	typeref:typename:size_t
free_all	src/ft_lstmap.c	/^static void	free_all(t_list *n, void *c, t_list **root, void (*del)(void *))$/;"	f	typeref:typename:void	file:
free_all	src/ft_split.c	/^static void	free_all(char ***p)$/;"	f	typeref:typename:void	file:
ft_atexit	src/ft_exit.c	/^int	ft_atexit(void *function)$/;"	f	typeref:typename:int
ft_atoi	src/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f	typeref:typename:int
ft_atoi_p	src/ft_atoi.c	/^int	ft_atoi_p(const char **str)$/;"	f	typeref:typename:int
ft_bnadd	src/ft_blocked_node.c	/^int	ft_bnadd(t_blocked_node *bn, void *ptr)$/;"	f	typeref:typename:int
ft_bnfree_shallow	src/ft_blocked_node.c	/^void	ft_bnfree_shallow(t_blocked_node *bn)$/;"	f	typeref:typename:void
ft_bnnew	src/ft_blocked_node.c	/^t_blocked_node	*ft_bnnew(void)$/;"	f	typeref:typename:t_blocked_node *
ft_bzero	src/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	src/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f	typeref:typename:void *
ft_delone_global	src/ft_global.c	/^void	ft_delone_global(const char *key, void (*del)(void *))$/;"	f	typeref:typename:void
ft_exit	src/ft_exit.c	/^void	ft_exit(int status)$/;"	f	typeref:typename:void
ft_fd2file	src/ft_fd2file.c	/^t_file	*ft_fd2file(int fd)$/;"	f	typeref:typename:t_file *
ft_fflush	src/ft_fflush.c	/^int	ft_fflush(t_file *stream)$/;"	f	typeref:typename:int
ft_filenew	src/ft_filenew.c	/^t_file	*ft_filenew(void)$/;"	f	typeref:typename:t_file *
ft_fileno	src/ft_fileno.c	/^int	ft_fileno(t_file *stream)$/;"	f	typeref:typename:int
ft_fprintf	src/ft_fprintf.c	/^int	ft_fprintf(t_file *s, const char *format, ...)$/;"	f	typeref:typename:int
ft_fputc	src/ft_fputc.c	/^int	ft_fputc(int c, t_file *stream)$/;"	f	typeref:typename:int
ft_fputc_wrapper	src/ft_vfprintf5.c	/^void	ft_fputc_wrapper(int c, t_file *stream)$/;"	f	typeref:typename:void
ft_fputs	src/ft_fputs.c	/^int	ft_fputs(const char *s, t_file *stream)$/;"	f	typeref:typename:int
ft_fset_fd	src/ft_fset_fd.c	/^void	ft_fset_fd(t_file *f, int fd)$/;"	f	typeref:typename:void
ft_fwrite	src/ft_fwrite.c	/^size_t	ft_fwrite(const void *ptr, size_t size, size_t nitems, t_file *stream)$/;"	f	typeref:typename:size_t
ft_g_mmadd	src/ft_gmemory.c	/^int	ft_g_mmadd(void *ptr)$/;"	f	typeref:typename:int
ft_g_mmcalloc	src/ft_gmemory.c	/^void	*ft_g_mmcalloc(size_t size, size_t cnt)$/;"	f	typeref:typename:void *
ft_g_mmfree	src/ft_gmemory.c	/^void	ft_g_mmfree(void)$/;"	f	typeref:typename:void
ft_g_mmget_p	src/ft_gmemory.c	/^t_memory_manager	**ft_g_mmget_p(void)$/;"	f	typeref:typename:t_memory_manager **
ft_g_mmmalloc	src/ft_gmemory.c	/^void	*ft_g_mmmalloc(size_t size)$/;"	f	typeref:typename:void *
ft_get_global	src/ft_global.c	/^void	*ft_get_global(const char *key)$/;"	f	typeref:typename:void *
ft_get_globals	src/ft_global.c	/^t_htbl	ft_get_globals(void)$/;"	f	typeref:typename:t_htbl
ft_isalnum	src/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	src/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	src/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	src/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	src/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	src/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	src/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	src/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	src/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	src/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstiter	src/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	src/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	src/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	src/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	src/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	src/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	src/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	src/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	src/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f	typeref:typename:void *
ft_memset	src/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f	typeref:typename:void *
ft_mmadd	src/ft_memory.c	/^int	ft_mmadd(t_memory_manager *mm, void *ptr)$/;"	f	typeref:typename:int
ft_mmcalloc	src/ft_memory.c	/^void	*ft_mmcalloc(t_memory_manager *mm, size_t cnt, size_t size)$/;"	f	typeref:typename:void *
ft_mmfree	src/ft_memory.c	/^void	ft_mmfree(t_memory_manager *mm)$/;"	f	typeref:typename:void
ft_mmmalloc	src/ft_memory.c	/^void	*ft_mmmalloc(t_memory_manager *mm, size_t size)$/;"	f	typeref:typename:void *
ft_mmnew	src/ft_memory.c	/^t_memory_manager	*ft_mmnew(void)$/;"	f	typeref:typename:t_memory_manager *
ft_printf	src/ft_printf.c	/^int	ft_printf(const char *format, ...)$/;"	f	typeref:typename:int
ft_putabsnbr_fd	src/ft_putnbr_fd.c	/^static void	ft_putabsnbr_fd(int n, int fd)$/;"	f	typeref:typename:void	file:
ft_putchar_fd	src/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	src/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	src/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	src/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_set_global	src/ft_global.c	/^int	ft_set_global(const char *key, void *val)$/;"	f	typeref:typename:int
ft_split	src/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_stderr	src/ft_stderr.c	/^t_file	*ft_stderr(void)$/;"	f	typeref:typename:t_file *
ft_stdin	src/ft_stdin.c	/^t_file	*ft_stdin(void)$/;"	f	typeref:typename:t_file *
ft_stdout	src/ft_stdout.c	/^t_file	*ft_stdout(void)$/;"	f	typeref:typename:t_file *
ft_strchr	src/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strcmp	src/ft_strcmp.c	/^int	ft_strcmp(const char *s1, const char *s2)$/;"	f	typeref:typename:int
ft_strdup	src/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f	typeref:typename:char *
ft_striteri	src/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoin	src/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	src/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	f	typeref:typename:size_t
ft_strlcpy	src/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dstsize)$/;"	f	typeref:typename:size_t
ft_strlen	src/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
ft_strmapi	src/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	src/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strndup	src/ft_strdup.c	/^char	*ft_strndup(const char *s1, size_t size)$/;"	f	typeref:typename:char *
ft_strnlen	src/ft_strlen.c	/^size_t	ft_strnlen(const char *s, size_t maxlen)$/;"	f	typeref:typename:size_t
ft_strnstr	src/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	src/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	src/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	src/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	src/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	src/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
ft_ui64toa_base	src/ft_vfprintf2.c	/^char	*ft_ui64toa_base(uint64_t i, const char *base, unsigned char base_len)$/;"	f	typeref:typename:char *
ft_vfprintf	src/ft_vfprintf6.c	/^int	ft_vfprintf(t_file *s, const char *format, va_list ap)$/;"	f	typeref:typename:int
get_cnt	src/ft_vfprintf0.c	/^size_t	get_cnt(void)$/;"	f	typeref:typename:size_t
get_next_line	src/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_sign	src/ft_vfprintf2.c	/^char	get_sign(t_format *f)$/;"	f	typeref:typename:char
hash	src/ft_htbl0.c	/^uint8_t	hash(const char *key)$/;"	f	typeref:typename:uint8_t
htadd	src/ft_htbl0.c	/^t_htbl	htadd(t_htbl ht, const char *key, void *val)$/;"	f	typeref:typename:t_htbl
htclear	src/ft_htbl1.c	/^void	htclear(t_htnode **ht, void (*del)(void *))$/;"	f	typeref:typename:void
htdelone	src/ft_htbl1.c	/^void	htdelone(t_htnode **ht, const char *key, void (*del)(void *))$/;"	f	typeref:typename:void
htget	src/ft_htbl0.c	/^t_htbl	htget(t_htbl ht, const char *key)$/;"	f	typeref:typename:t_htbl
htnew	src/ft_htbl0.c	/^t_htbl	htnew(void)$/;"	f	typeref:typename:t_htbl
htnodedel	src/ft_htbl1.c	/^static void	htnodedel(t_htnode *htnode, void (*del)(void *))$/;"	f	typeref:typename:void	file:
htnodenew	src/ft_htbl0.c	/^static t_htnode	*htnodenew(const char *key, void *val)$/;"	f	typeref:typename:t_htnode *	file:
init_print_c	src/ft_vfprintf3.c	/^void	init_print_c(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_d	src/ft_vfprintf4.c	/^void	init_print_d(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_p	src/ft_vfprintf4.c	/^void	init_print_p(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_percent	src/ft_vfprintf3.c	/^void	init_print_percent(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_s	src/ft_vfprintf3.c	/^void	init_print_s(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_u	src/ft_vfprintf4.c	/^void	init_print_u(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_x	src/ft_vfprintf4.c	/^void	init_print_x(t_format *f, t_print *p)$/;"	f	typeref:typename:void
init_print_xx	src/ft_vfprintf4.c	/^void	init_print_xx(t_format *f, t_print *p)$/;"	f	typeref:typename:void
inner_len	include/_ft_stdio.h	/^	size_t				inner_len;$/;"	m	struct:s_print	typeref:typename:size_t
is_overflow	src/ft_vfprintf5.c	/^int	is_overflow(t_print *p)$/;"	f	typeref:typename:int
key	include/ft_htbl.h	/^	const char			*key;$/;"	m	struct:s_htnode	typeref:typename:const char *
l_ws_len	include/_ft_stdio.h	/^	size_t				l_ws_len;$/;"	m	struct:s_print	typeref:typename:size_t
main	test/ft_atexit.c	/^int main()$/;"	f	typeref:typename:int
main	test/ft_global.c	/^int	main(void)$/;"	f	typeref:typename:int
main	test/ft_memory.c	/^int main(void)$/;"	f	typeref:typename:int
main	test/ft_printf.c	/^int main()$/;"	f	typeref:typename:int
main	test/ft_printf__size.c	/^int main()$/;"	f	typeref:typename:int
main	test/test.c	/^int main(void)$/;"	f	typeref:typename:int
main	test/vfprintf.c	/^int	main(void)$/;"	f	typeref:typename:int
minus	include/_ft_stdio.h	/^		unsigned int	minus : 1;$/;"	m	struct:s_format::__anon45fa6c690208	typeref:typename:unsigned int:1
minus	src/ft_vfprintf2.c	/^size_t	minus(size_t *lhs, size_t rhs)$/;"	f	typeref:typename:size_t
mod	include/_ft_stdio.h	/^	unsigned char		mod;$/;"	m	struct:s_format	typeref:typename:unsigned char
nbr	include/_ft_stdio.h	/^		int				nbr;$/;"	m	union:s_format::__anon45fa6c69010a	typeref:typename:int
next	include/ft_blocked_node.h	/^	t_blocked_node				*next;$/;"	m	struct:s_blocked_node	typeref:typename:t_blocked_node *
next	include/ft_htbl.h	/^	t_htnode			*next;$/;"	m	struct:s_htnode	typeref:typename:t_htnode *
next	include/ft_lst.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	include/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
norm_fmt	src/ft_vfprintf5.c	/^t_print	*norm_fmt(t_format *f)$/;"	f	typeref:typename:t_print *
nullize_free	src/get_next_line.c	/^static char	*nullize_free(char **p)$/;"	f	typeref:typename:char *	file:
num	include/_ft_stdio.h	/^		unsigned int	num : 1;$/;"	m	struct:s_format::__anon45fa6c690208	typeref:typename:unsigned int:1
p	include/_ft_stdio.h	/^	const unsigned char	*p;$/;"	m	struct:s_print	typeref:typename:const unsigned char *
p	include/ft_blocked_node.h	/^	void						*p[BN_STORE_MAX];$/;"	m	struct:s_blocked_node	typeref:typename:void * []
pack	src/get_next_line.c	/^static bool	pack(char **p_store, char *s)$/;"	f	typeref:typename:bool	file:
period	include/_ft_stdio.h	/^		unsigned int	period : 1;$/;"	m	struct:s_format::__anon45fa6c690208	typeref:typename:unsigned int:1
plus	include/_ft_stdio.h	/^		unsigned int	plus : 1;$/;"	m	struct:s_format::__anon45fa6c690208	typeref:typename:unsigned int:1
prec	include/_ft_stdio.h	/^	size_t				prec;$/;"	m	struct:s_format	typeref:typename:size_t
prefix	include/_ft_stdio.h	/^	const char			*prefix;$/;"	m	struct:s_print	typeref:typename:const char *
print_by_unit	src/ft_vfprintf6.c	/^void	print_by_unit(t_file *s, const char **f, va_list ap)$/;"	f	typeref:typename:void
print_data	src/ft_vfprintf5.c	/^void	print_data(t_file *s, t_print *p)$/;"	f	typeref:typename:void
print_unit	src/ft_vfprintf5.c	/^void	print_unit(t_file *s, t_print *p)$/;"	f	typeref:typename:void
ptr	include/_ft_stdio.h	/^		void			*ptr;$/;"	m	union:s_format::__anon45fa6c69010a	typeref:typename:void *
r_ws_len	include/_ft_stdio.h	/^	size_t				r_ws_len;$/;"	m	struct:s_print	typeref:typename:size_t
read_and_pack	src/get_next_line.c	/^static bool	read_and_pack(char **p_store, int fd)$/;"	f	typeref:typename:bool	file:
read_arg	src/ft_vfprintf1.c	/^int	read_arg(const char **f, t_format *p, va_list ap)$/;"	f	typeref:typename:int
read_flag	src/ft_vfprintf1.c	/^void	read_flag(const char **f, t_format *fmt)$/;"	f	typeref:typename:void
read_fmt	src/ft_vfprintf1.c	/^t_format	*read_fmt(const char **f, va_list ap)$/;"	f	typeref:typename:t_format *
read_nbr	src/ft_vfprintf1.c	/^int	read_nbr(const char **f)$/;"	f	typeref:typename:int
read_raw	src/ft_vfprintf1.c	/^void	read_raw(t_format *fmt, const char **f)$/;"	f	typeref:typename:void
s_blocked_node	include/ft_blocked_node.h	/^struct							s_blocked_node$/;"	s
s_file	include/ft_stdio.h	/^typedef struct s_file$/;"	s
s_flag	include/_ft_stdio.h	/^	} s_flag;$/;"	m	struct:s_format	typeref:struct:s_format::__anon45fa6c690208
s_format	include/_ft_stdio.h	/^struct					s_format$/;"	s
s_htnode	include/ft_htbl.h	/^struct					s_htnode$/;"	s
s_list	include/ft_lst.h	/^typedef struct s_list$/;"	s
s_list	include/libft.h	/^typedef struct s_list$/;"	s
s_print	include/_ft_stdio.h	/^struct					s_print$/;"	s
set_cnt	src/ft_vfprintf0.c	/^void	set_cnt(size_t cnt)$/;"	f	typeref:typename:void
set_digit	src/ft_itoa.c	/^static void	set_digit(int n, char *p, size_t cur)$/;"	f	typeref:typename:void	file:
set_f_width	src/ft_vfprintf2.c	/^void	set_f_width(t_print *p, t_format *f)$/;"	f	typeref:typename:void
set_prec	src/ft_vfprintf2.c	/^void	set_prec(t_print *p, t_format *f)$/;"	f	typeref:typename:void
sign	include/_ft_stdio.h	/^	char				sign;$/;"	m	struct:s_print	typeref:typename:char
space	include/_ft_stdio.h	/^		unsigned int	space : 1;$/;"	m	struct:s_format::__anon45fa6c690208	typeref:typename:unsigned int:1
split_word_iter	src/ft_split.c	/^static bool	split_word_iter(char const *s, char c, void *p,$/;"	f	typeref:typename:bool	file:
strlen_pref	src/ft_strtrim.c	/^static size_t	strlen_pref(char const *s1, char const *set)$/;"	f	typeref:typename:size_t	file:
strlen_suf	src/ft_strtrim.c	/^static size_t	strlen_suf(char const *s1, char const *set)$/;"	f	typeref:typename:size_t	file:
strlen_test	test/vfprintf.c	/^int strlen_test(size_t s)$/;"	f	typeref:typename:int
t_blocked_node	include/ft_blocked_node.h	/^typedef struct s_blocked_node	t_blocked_node;$/;"	t	typeref:struct:s_blocked_node
t_file	include/ft_stdio.h	/^typedef FILE	t_file;$/;"	t	typeref:typename:FILE
t_file	include/ft_stdio.h	/^}				t_file;$/;"	t	typeref:struct:s_file
t_format	include/_ft_stdio.h	/^typedef struct s_format	t_format;$/;"	t	typeref:struct:s_format
t_htbl	include/ft_htbl.h	/^typedef t_htnode		**t_htbl;$/;"	t	typeref:typename:t_htnode **
t_htnode	include/ft_htbl.h	/^typedef struct s_htnode	t_htnode;$/;"	t	typeref:struct:s_htnode
t_list	include/ft_lst.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_list	include/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_memory_manager	include/ft_memory.h	/^typedef t_blocked_node	t_memory_manager;$/;"	t	typeref:typename:t_blocked_node
t_print	include/_ft_stdio.h	/^typedef struct s_print	t_print;$/;"	t	typeref:struct:s_print
test_size	test/ft_printf__size.c	/^void test_size(size_t s)$/;"	f	typeref:typename:void
test_vfprintf	test/vfprintf.c	/^int	test_vfprintf(const char *restrict f, ...)$/;"	f	typeref:typename:int
u_val	include/_ft_stdio.h	/^	} u_val;$/;"	m	struct:s_format	typeref:union:s_format::__anon45fa6c69010a
val	include/ft_htbl.h	/^	void				*val;$/;"	m	struct:s_htnode	typeref:typename:void *
vfpmm	src/ft_vfprintf6.c	/^t_memory_manager	*vfpmm(void)$/;"	f	typeref:typename:t_memory_manager *
zero	include/_ft_stdio.h	/^		unsigned int	zero : 1;$/;"	m	struct:s_format::__anon45fa6c690208	typeref:typename:unsigned int:1
zero_len	include/_ft_stdio.h	/^	size_t				zero_len;$/;"	m	struct:s_print	typeref:typename:size_t
